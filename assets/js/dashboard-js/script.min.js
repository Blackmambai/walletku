document.addEventListener("DOMContentLoaded",(function(){const t={currency:"IDR",dateFormat:"id-ID",csvFileName:"WalletKu_backup",walletTypes:{cash:{name:"Tunai",color:"#4361ee"},bank:{name:"Bank",color:"#3f37c9"},savings:{name:"Tabungan",color:"#4895ef"},investment:{name:"Investasi",color:"#7209b7"},other:{name:"Lainnya",color:"#8d99ae"}},defaultCategories:{income:[{id:"salary",name:"Gaji",color:"#4cc9f0"},{id:"bonus",name:"Bonus",color:"#4895ef"},{id:"save",name:"Tabungan",color:"#c57312"},{id:"investment",name:"Investasi",color:"#4361ee"},{id:"freelance",name:"Freelance",color:"#3f37c9"},{id:"other-income",name:"Lainnya",color:"#b5179e"}],expense:[{id:"food",name:"Makanan",color:"#f72585"},{id:"transport",name:"Transportasi",color:"#b5179e"},{id:"shopping",name:"Belanja",color:"#a30d79"},{id:"bill",name:"Tagihan",color:"#893505"},{id:"installment",name:"Cicilan",color:"#148b01"},{id:"housing",name:"Perumahan",color:"#7209b7"},{id:"utilities",name:"Listrik/Air",color:"#560bad"},{id:"other-expense",name:"Lainnya",color:"#480ca8"}]}},e={transactionModal:document.getElementById("transactionModal")?new bootstrap.Modal("#transactionModal"):null,walletModal:document.getElementById("walletModal")?new bootstrap.Modal("#walletModal"):null,categoryModal:document.getElementById("categoryModal")?new bootstrap.Modal("#categoryModal"):null,confirmModal:document.getElementById("confirmModal")?new bootstrap.Modal("#confirmModal"):null,importModal:document.getElementById("importModal")?new bootstrap.Modal("#importModal"):null,transactionForm:document.getElementById("transaction-form"),transactionType:document.getElementById("transaction-type"),transactionWallet:document.getElementById("transaction-wallet"),transferTo:document.getElementById("transfer-to"),transferContainer:document.getElementById("transfer-to-container"),transactionAmount:document.getElementById("transaction-amount"),transactionDate:document.getElementById("transaction-date"),transactionDesc:document.getElementById("transaction-description"),transactionCategory:document.getElementById("transaction-category"),submitTransactionBtn:document.getElementById("submit-transaction-btn"),walletForm:document.getElementById("wallet-form"),walletName:document.getElementById("wallet-name"),walletType:document.getElementById("wallet-type"),walletBalance:document.getElementById("wallet-balance"),walletCurrency:document.getElementById("wallet-currency"),saveWalletBtn:document.getElementById("save-wallet-btn"),manageCategoriesBtn:document.getElementById("manage-categories-btn"),incomeCategoryForm:document.getElementById("income-category-form"),expenseCategoryForm:document.getElementById("expense-category-form"),incomeCategoryName:document.getElementById("income-category-name"),expenseCategoryName:document.getElementById("expense-category-name"),incomeCategoryColor:document.getElementById("income-category-color"),expenseCategoryColor:document.getElementById("expense-category-color"),incomeCategoriesList:document.getElementById("income-categories-list"),expenseCategoriesList:document.getElementById("expense-categories-list"),totalBalance:document.getElementById("total-balance"),totalIncome:document.getElementById("total-income"),totalExpense:document.getElementById("total-expense"),walletsContainer:document.getElementById("wallets-container"),reportPeriod:document.getElementById("report-period"),reportStartDate:document.getElementById("report-start-date"),reportEndDate:document.getElementById("report-end-date"),customDateRange:document.getElementById("custom-date-range"),generateReportBtn:document.getElementById("generate-report"),reportIncome:document.getElementById("report-income"),reportExpense:document.getElementById("report-expense"),reportBalance:document.getElementById("report-balance"),reportChange:document.getElementById("report-change"),incomeChart:document.getElementById("income-chart"),expenseChart:document.getElementById("expense-chart"),walletChart:document.getElementById("wallet-balance-chart"),monthlyComparisonChart:document.getElementById("monthly-comparison-chart"),filterDate:document.getElementById("filter-date"),filterType:document.getElementById("filter-type"),filterWallet:document.getElementById("filter-wallet"),filterBtn:document.getElementById("filter-btn"),resetFilters:document.getElementById("reset-filters"),transactionsList:document.getElementById("transactions-list"),exportBtn:document.getElementById("export-btn"),importBtn:document.getElementById("import-btn"),importFile:document.getElementById("import-file"),importSubmit:document.getElementById("import-submit")},a={editId:null,currentTransactionType:null,chartInstances:{income:null,expense:null,wallet:null,monthlyComparison:null},confirmCallback:null,editingCategory:{type:null,id:null}},n={formatCurrency:e=>new Intl.NumberFormat(t.dateFormat,{style:"currency",currency:t.currency,minimumFractionDigits:0}).format(e),formatDate:e=>new Date(e).toLocaleDateString(t.dateFormat,{day:"2-digit",month:"2-digit",year:"numeric"}),showNotification:(t,e="success")=>{Swal.fire({icon:"success"===e?"success":"error",title:"success"===e?"Sukses":"Error",text:t,toast:!0,position:"top-end",showConfirmButton:!1,timer:3e3,timerProgressBar:!0})},getWalletById:t=>n.getData("wallets").find((e=>e.id===t)),getData:t=>{const e=localStorage.getItem(t);try{return e?JSON.parse(e):[]}catch(e){return console.error(`Error parsing ${t} data:`,e),[]}},saveData:(t,e)=>{try{return localStorage.setItem(t,JSON.stringify(e)),!0}catch(e){return console.error(`Error saving ${t} data:`,e),n.showNotification("Gagal menyimpan data","danger"),!1}},calculateWalletBalance:t=>{const e=n.getData("wallets"),a=n.getData("transactions"),o=e.find((e=>e.id===t));if(!o)return 0;let r=o.initialBalance||0;return a.forEach((e=>{e.walletId===t&&("income"===e.type&&(r+=e.amount),"expense"===e.type&&(r-=e.amount),"transfer"===e.type&&(r-=e.amount)),e.toWalletId===t&&"transfer"===e.type&&(r+=e.amount)})),r},checkWalletBalance:(t,e)=>n.calculateWalletBalance(t)>=e,getCurrentMonthData:()=>{const t=new Date;return{month:t.getMonth(),year:t.getFullYear()}},getLastMonthData:()=>{const t=new Date;let e=t.getMonth()-1,a=t.getFullYear();return e<0&&(e=11,a--),{month:e,year:a}},confirm:(t,e)=>{Swal.fire({title:"Konfirmasi",text:t,icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Ya",cancelButtonText:"Batal"}).then((t=>{t.isConfirmed&&e()}))},exportToCSV:function(){try{const e=n.getData("wallets"),a=n.getData("transactions"),o=n.getData("incomeCategories")||t.defaultCategories.income,r=n.getData("expenseCategories")||t.defaultCategories.expense;let i="=== WALLETS ===\n";i+="id,name,type,initialBalance,currency,createdAt\n",e.forEach((t=>{i+=`"${t.id}","${t.name}","${t.type}",${t.initialBalance},"${t.currency}","${t.createdAt}"\n`})),i+="\n=== TRANSACTIONS ===\n",i+="id,type,walletId,toWalletId,amount,date,description,category,createdAt\n",a.forEach((t=>{i+=`"${t.id}","${t.type}","${t.walletId}","${t.toWalletId||""}",${t.amount},"${t.date}","${t.description}","${t.category||""}","${t.createdAt}"\n`})),i+="\n=== INCOME CATEGORIES ===\n",i+="id,name,color\n",o.forEach((t=>{i+=`"${t.id}","${t.name}","${t.color}"\n`})),i+="\n=== EXPENSE CATEGORIES ===\n",i+="id,name,color\n",r.forEach((t=>{i+=`"${t.id}","${t.name}","${t.color}"\n`}));const l=new Blob([i],{type:"text/csv;charset=utf-8;"}),s=URL.createObjectURL(l),c=document.createElement("a");return c.href=s,c.download=`${t.csvFileName}_${(new Date).toISOString().slice(0,10)}.csv`,document.body.appendChild(c),c.click(),document.body.removeChild(c),n.showNotification("Backup data berhasil diexport ke CSV"),!0}catch(t){return console.error("Error exporting to CSV:",t),n.showNotification("Gagal mengeksport data ke CSV","danger"),!1}},importFromCSV:function(t){const a=new FileReader;a.onload=function(t){try{const a=t.target.result.split("=== WALLETS ===\n")[1].split("\n=== TRANSACTIONS ===\n"),r=a[1].split("\n=== INCOME CATEGORIES ===\n"),i=r[1].split("\n=== EXPENSE CATEGORIES ===\n"),l=a[0].split("\n").filter((t=>""!==t.trim())),s=l[0].replace(/"/g,"").split(","),c=[];for(let t=1;t<l.length;t++){const e=l[t].match(/(".*?"|[^",\s]+)(?=\s*,|\s*$)/g);if(!e||e.length!==s.length)continue;const a={};s.forEach(((t,n)=>{let o=e[n].replace(/^"|"$/g,"");"initialBalance"===t&&(o=parseFloat(o)||0),a[t]=o})),c.push(a)}const d=r[0].split("\n").filter((t=>""!==t.trim())),m=d[0].replace(/"/g,"").split(","),u=[];for(let t=1;t<d.length;t++){const e=d[t].match(/(".*?"|[^",\s]+)(?=\s*,|\s*$)/g);if(!e||e.length<m.length)continue;const a={};m.forEach(((t,n)=>{let o=e[n].replace(/^"|"$/g,"");"amount"===t&&(o=parseFloat(o)||0),a[t]=o})),u.push(a)}const g=i[0].split("\n").filter((t=>""!==t.trim())),p=g[0].replace(/"/g,"").split(","),h=[];for(let t=1;t<g.length;t++){const e=g[t].match(/(".*?"|[^",\s]+)(?=\s*,|\s*$)/g);if(!e||e.length!==p.length)continue;const a={};p.forEach(((t,n)=>{a[t]=e[n].replace(/^"|"$/g,"")})),h.push(a)}const f=i[1]?.split("\n").filter((t=>""!==t.trim()))||[],y=f[0]?.replace(/"/g,"").split(",")||[],C=[];for(let t=1;t<f.length;t++){const e=f[t].match(/(".*?"|[^",\s]+)(?=\s*,|\s*$)/g);if(!e||e.length!==y.length)continue;const a={};y.forEach(((t,n)=>{a[t]=e[n].replace(/^"|"$/g,"")})),C.push(a)}n.confirm(`Anda akan mengimpor ${c.length} dompet dan ${u.length} transaksi. Lanjutkan? Data sebelumnya akan diganti.`,(()=>{n.saveData("wallets",c)&&n.saveData("transactions",u)&&(n.showNotification("Backup data berhasil diimpor"),o.loadWallets(),o.updateDashboard(),e.generateReportBtn&&o.generateReport(),e.importModal&&e.importModal.hide())}))}catch(t){console.error("Error importing from CSV:",t),n.showNotification("Gagal mengimpor data dari CSV","danger")}},a.onerror=function(){n.showNotification("Gagal membaca file CSV","danger")},a.readAsText(t)}},o={init:function(){const a=(new Date).toISOString().split("T")[0];if(e.transactionDate&&(e.transactionDate.value=a),e.reportStartDate&&(e.reportStartDate.value=a),e.reportEndDate&&(e.reportEndDate.value=a),e.filterDate&&(e.filterDate.value=a),!localStorage.getItem("wallets")){const t=[{id:"wallet-default-1",name:"Dompet Utama",type:"cash",initialBalance:0,currency:"IDR",createdAt:(new Date).toISOString()}];n.saveData("wallets",t)}localStorage.getItem("transactions")||n.saveData("transactions",[]),localStorage.getItem("incomeCategories")||n.saveData("incomeCategories",t.defaultCategories.income),localStorage.getItem("expenseCategories")||n.saveData("expenseCategories",t.defaultCategories.expense),this.loadWallets(),this.updateDashboard(),this.renderCategoriesList("income"),this.renderCategoriesList("expense"),this.setupEventListeners(),e.generateReportBtn&&this.generateReport(),e.transactionsList&&this.loadTransactions()},setupEventListeners:function(){e.transactionType&&e.transactionType.addEventListener("change",this.handleTransactionTypeChange.bind(this)),e.submitTransactionBtn&&e.submitTransactionBtn.addEventListener("click",(t=>{t.preventDefault(),this.saveTransaction()})),e.saveWalletBtn&&e.saveWalletBtn.addEventListener("click",(t=>{t.preventDefault(),this.saveWallet()})),e.manageCategoriesBtn&&e.manageCategoriesBtn.addEventListener("click",(()=>{e.categoryModal.show()})),e.incomeCategoryForm&&e.incomeCategoryForm.addEventListener("submit",(t=>{t.preventDefault(),this.saveCategory("income")})),e.expenseCategoryForm&&e.expenseCategoryForm.addEventListener("submit",(t=>{t.preventDefault(),this.saveCategory("expense")})),e.incomeCategoriesList&&e.incomeCategoriesList.addEventListener("click",(t=>{const e=t.target.closest('[data-action="edit-category"]');if(e){const t=e.getAttribute("data-id");this.editCategory("income",t)}const a=t.target.closest('[data-action="delete-category"]');if(a){const t=a.getAttribute("data-id");this.deleteCategory("income",t)}})),e.expenseCategoriesList&&e.expenseCategoriesList.addEventListener("click",(t=>{const e=t.target.closest('[data-action="edit-category"]');if(e){const t=e.getAttribute("data-id");this.editCategory("expense",t)}const a=t.target.closest('[data-action="delete-category"]');if(a){const t=a.getAttribute("data-id");this.deleteCategory("expense",t)}})),e.reportPeriod&&e.reportPeriod.addEventListener("change",this.handleReportPeriodChange.bind(this)),e.generateReportBtn&&e.generateReportBtn.addEventListener("click",(()=>this.generateReport())),e.filterBtn&&e.filterBtn.addEventListener("click",(()=>this.loadTransactions())),e.resetFilters&&e.resetFilters.addEventListener("click",(()=>{e.filterDate&&(e.filterDate.value=""),e.filterType&&(e.filterType.value=""),e.filterWallet&&(e.filterWallet.value=""),this.loadTransactions()})),e.walletsContainer&&e.walletsContainer.addEventListener("click",(t=>{const e=t.target.closest("[data-transaction-type]");if(e){const t=e.getAttribute("data-transaction-type"),a=e.getAttribute("data-wallet-id");this.showTransactionForm(t,a)}const a=t.target.closest('[data-action="delete-wallet"]');if(a){const t=a.getAttribute("data-wallet-id");this.deleteWallet(t)}})),e.transactionsList&&e.transactionsList.addEventListener("click",(t=>{const e=t.target.closest('[data-action="edit-transaction"]');if(e){const t=e.getAttribute("data-transaction-id");this.editTransaction(t)}const a=t.target.closest('[data-action="delete-transaction"]');if(a){const t=a.getAttribute("data-transaction-id");this.deleteTransaction(t)}})),e.exportBtn&&e.exportBtn.addEventListener("click",n.exportToCSV),e.importSubmit&&e.importSubmit.addEventListener("click",(()=>{e.importFile.files.length>0?n.importFromCSV(e.importFile.files[0]):n.showNotification("Pilih file backup terlebih dahulu","danger")}))},loadWallets:function(){const a=n.getData("wallets");e.walletsContainer&&(e.walletsContainer.innerHTML="",0!==a.length?(a.forEach((a=>{const o=n.calculateWalletBalance(a.id),r=document.createElement("div");r.className=`wallet-card ${a.type}`,r.innerHTML=`\n                    <div class="wallet-header">\n                        <span class="wallet-name">${a.name}</span>\n                        <span class="wallet-type">${t.walletTypes[a.type]?.name||a.type}</span>\n                    </div>\n                    <div class="wallet-balance">${n.formatCurrency(o)}</div>\n                    <div class="wallet-currency">${a.currency}</div>\n                    <div class="wallet-actions">\n                        <button class="btn btn-sm btn-income" data-wallet-id="${a.id}" data-transaction-type="income">\n                            <i class="fas fa-plus-circle"></i> Tambah\n                        </button>\n                        <button class="btn btn-sm btn-expense" data-wallet-id="${a.id}" data-transaction-type="expense">\n                            <i class="fas fa-minus-circle"></i> Kurangi\n                        </button>\n                        <button class="btn btn-sm btn-danger" data-wallet-id="${a.id}" data-action="delete-wallet">\n                            <i class="fas fa-trash"></i> Hapus\n                        </button>\n                    </div>\n                `,e.walletsContainer.appendChild(r)})),this.updateWalletSelectOptions()):e.walletsContainer.innerHTML='\n                    <div class="empty-state">\n                        <p>Anda belum memiliki dompet/tabungan</p>\n                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#walletModal">\n                            <i class="fas fa-plus"></i> Tambah dompet dulu yuk\n                        </button>\n                    </div>\n                ')},updateWalletSelectOptions:function(){const t=n.getData("wallets");e.transactionWallet&&(e.transactionWallet.innerHTML="",t.forEach((t=>{const a=document.createElement("option");a.value=t.id,a.textContent=t.name,e.transactionWallet.appendChild(a)}))),e.transferTo&&(e.transferTo.innerHTML="",t.forEach((t=>{const a=document.createElement("option");a.value=t.id,a.textContent=t.name,e.transferTo.appendChild(a)}))),e.filterWallet&&(e.filterWallet.innerHTML='<option value="">Semua Dompet</option>',t.forEach((t=>{const a=document.createElement("option");a.value=t.id,a.textContent=t.name,e.filterWallet.appendChild(a)})))},saveWallet:function(){if(!e.walletName.value||!e.walletName.value.trim())return void Swal.fire({icon:"error",title:"Nama Dompet Kosong",text:"Harap isi nama dompet terlebih dahulu!",confirmButtonText:"OK"});const t=parseFloat(e.walletBalance.value)||0;if(isNaN(t))return void Swal.fire({icon:"error",title:"Saldo Tidak Valid",text:"Harap masukkan angka yang valid untuk saldo awal",confirmButtonText:"OK"});const a={id:"wallet-"+Date.now(),name:e.walletName.value.trim(),type:e.walletType.value,initialBalance:t,currency:e.walletCurrency.value,createdAt:(new Date).toISOString()},o=n.getData("wallets");o.push(a),n.saveData("wallets",o)?(e.walletForm.reset(),e.walletBalance.value="0",e.walletModal&&e.walletModal.hide(),this.loadWallets(),this.updateDashboard(),Swal.fire({icon:"success",title:"Berhasil!",text:"Dompet baru berhasil ditambahkan",timer:2e3,showConfirmButton:!1})):Swal.fire({icon:"error",title:"Gagal",text:"Gagal menyimpan dompet baru",confirmButtonText:"OK"})},deleteWallet:function(t){const a=n.getWalletById(t),o=n.calculateWalletBalance(t);o>0?Swal.fire({icon:"error",title:"Tidak Dapat Menghapus",html:`Dompet <strong>${a.name}</strong> masih memiliki saldo ${n.formatCurrency(o)}!<br><br>\n                          Anda harus mengosongkan saldo terlebih dahulu sebelum menghapus dompet.`,confirmButtonText:"OK"}):Swal.fire({title:"Konfirmasi Hapus Dompet",html:`Apakah Anda yakin ingin menghapus dompet <strong>${a.name}</strong>?<br><br>\n                      Semua transaksi terkait juga akan dihapus.`,icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Ya, Hapus!",cancelButtonText:"Batal"}).then((a=>{if(a.isConfirmed){const a=n.getData("wallets").filter((e=>e.id!==t)),o=n.getData("transactions").filter((e=>e.walletId!==t&&e.toWalletId!==t));n.saveData("wallets",a)&&n.saveData("transactions",o)?(this.loadWallets(),this.updateDashboard(),e.generateReportBtn&&this.generateReport(),e.transactionsList&&this.loadTransactions(),Swal.fire({icon:"success",title:"Terhapus!",text:"Dompet berhasil dihapus",timer:2e3,showConfirmButton:!1})):Swal.fire({icon:"error",title:"Gagal",text:"Gagal menghapus dompet",confirmButtonText:"OK"})}}))},loadTransactions:function(){if(!e.transactionsList)return;const a=n.getData("transactions"),o=(n.getData("wallets"),e.filterDate?e.filterDate.value:""),r=e.filterType?e.filterType.value:"",i=e.filterWallet?e.filterWallet.value:"";let l=[...a];if(o&&(l=l.filter((t=>t.date.startsWith(o)))),r&&(l=l.filter((t=>t.type===r))),i&&(l=l.filter((t=>t.walletId===i||t.toWalletId===i))),l.sort(((t,e)=>new Date(e.date)-new Date(t.date))),e.transactionsList.innerHTML="",0===l.length)return void(e.transactionsList.innerHTML='\n                    <tr>\n                        <td colspan="6" class="text-center py-4">Tidak ada transaksi</td>\n                    </tr>\n                ');const s={};l.forEach((t=>{const e=n.formatDate(t.date);s[e]||(s[e]=[]),s[e].push(t)}));for(const[a,o]of Object.entries(s)){const r=document.createElement("tr");r.className="date-header",r.innerHTML=`\n                    <td colspan="6" class="fw-bold bg-light">${a}</td>\n                `,e.transactionsList.appendChild(r),o.forEach((a=>{const o=n.getWalletById(a.walletId),r=o?o.name:"Unknown",i=a.toWalletId?n.getWalletById(a.toWalletId):null,l=i?i.name:"",s=n.getData("incomeCategories")||t.defaultCategories.income,c=n.getData("expenseCategories")||t.defaultCategories.expense;let d="-";if(a.category)if("income"===a.type){const t=s.find((t=>t.id===a.category));d=t?t.name:a.category}else if("expense"===a.type){const t=c.find((t=>t.id===a.category));d=t?t.name:a.category}const m=document.createElement("tr");m.className=`transaction-${a.type}`,m.innerHTML=`\n                        <td>${a.date.split("T")[1]?.slice(0,5)||""}</td>\n                        <td>${a.description||"-"}</td>\n                        <td>${r}${"transfer"===a.type?` → ${l}`:""}</td>\n                        <td>${d}</td>\n                        <td class="${"income"===a.type?"text-success":"expense"===a.type?"text-danger":"text-primary"}">\n                            ${"income"===a.type?"+":"expense"===a.type?"-":"↔"} \n                            ${n.formatCurrency(a.amount)}\n                        </td>\n                        <td class="transaction-actions">\n                            <button data-action="edit-transaction" data-transaction-id="${a.id}" class="btn btn-sm btn-warning">\n                                <i class="fas fa-edit"></i>\n                            </button>\n                            <button data-action="delete-transaction" data-transaction-id="${a.id}" class="btn btn-sm btn-danger">\n                                <i class="fas fa-trash"></i>\n                            </button>\n                        </td>\n                    `,e.transactionsList.appendChild(m)}))}},updateDashboard:function(){const t=n.getData("transactions"),a=n.getData("wallets");let o=0,r=0;t.forEach((t=>{"income"===t.type&&(o+=t.amount),"expense"===t.type&&(r+=t.amount)}));let i=0;a.forEach((t=>{i+=n.calculateWalletBalance(t.id)})),e.totalBalance&&(e.totalBalance.textContent=n.formatCurrency(i)),e.totalIncome&&(e.totalIncome.textContent=n.formatCurrency(o)),e.totalExpense&&(e.totalExpense.textContent=n.formatCurrency(r))},showTransactionForm:function(t,n=null){if(!e.transactionModal)return;a.currentTransactionType=t,a.editId=null;document.getElementById("transactionModalLabel").textContent={income:"Tambah Pemasukan",expense:"Tambah Pengeluaran",transfer:"Tambah Transfer"}[t]||"Tambah Transaksi",e.transactionForm.reset(),e.transactionType.value=t,n&&(e.transactionWallet.value=n),e.transactionDate.value=(new Date).toISOString().split("T")[0],e.transferContainer&&(e.transferContainer.style.display="transfer"===t?"block":"none"),this.loadCategories(t),e.transactionModal.show()},editTransaction:function(t){const o=n.getData("transactions").find((e=>e.id===t));o&&e.transactionModal&&(a.editId=t,a.currentTransactionType=o.type,document.getElementById("transactionModalLabel").textContent="Edit Transaksi",e.transactionType.value=o.type,e.transactionWallet.value=o.walletId,e.transactionAmount.value=o.amount,e.transactionDate.value=o.date.split("T")[0],e.transactionDesc.value=o.description||"","transfer"===o.type?(e.transferTo.value=o.toWalletId,e.transferContainer.style.display="block"):e.transferContainer.style.display="none",this.loadCategories(o.type),o.category&&(e.transactionCategory.value=o.category),e.transactionModal.show())},handleTransactionTypeChange:function(){const t=e.transactionType.value;a.currentTransactionType=t,e.transferContainer&&(e.transferContainer.style.display="transfer"===t?"block":"none"),this.loadCategories(t)},loadCategories:function(a){if(!e.transactionCategory)return;e.transactionCategory.innerHTML='<option value="">Pilih Kategori (Opsional)</option>';("income"===a?n.getData("incomeCategories")||t.defaultCategories.income:n.getData("expenseCategories")||t.defaultCategories.expense).forEach((t=>{const a=document.createElement("option");a.value=t.id,a.textContent=t.name,e.transactionCategory.appendChild(a)}))},saveTransaction:function(){const t={type:e.transactionType.value,walletId:e.transactionWallet.value,amount:parseFloat(e.transactionAmount.value),date:e.transactionDate.value,description:e.transactionDesc.value.trim(),category:e.transactionCategory.value||null,createdAt:(new Date).toISOString()};if(!t.walletId)return void Swal.fire({icon:"error",title:"Peringatan",text:"Silakan pilih dompet terlebih dahulu!",confirmButtonText:"OK"});if(!t.amount||isNaN(t.amount)||t.amount<=0)return void Swal.fire({icon:"error",title:"Peringatan",text:"Jumlah transaksi harus lebih dari 0!",confirmButtonText:"OK"});if("transfer"===t.type){if(t.toWalletId=e.transferTo.value,!t.toWalletId)return void Swal.fire({icon:"error",title:"Peringatan",text:"Silakan pilih dompet tujuan transfer!",confirmButtonText:"OK"});if(t.walletId===t.toWalletId)return void Swal.fire({icon:"error",title:"Peringatan",text:"Tidak bisa transfer ke dompet yang sama!",confirmButtonText:"OK"})}if("expense"===t.type||"transfer"===t.type){const e=n.getWalletById(t.walletId);let o=n.calculateWalletBalance(t.walletId);if(a.editId){const t=n.getData("transactions").find((t=>t.id===a.editId));!t||"expense"!==t.type&&"transfer"!==t.type||(o+=t.amount)}if(0===o)return void Swal.fire({icon:"error",title:"Saldo Tidak Cukup",html:`Dompet <strong>${e.name}</strong> memiliki saldo 0!<br><br>\n                              Anda tidak dapat melakukan ${"expense"===t.type?"pengeluaran":"transfer"} dengan saldo 0.`,confirmButtonText:"OK"});if(!n.checkWalletBalance(t.walletId,t.amount))return void Swal.fire({icon:"error",title:"Saldo Tidak Cukup",html:`Saldo dompet <strong>${e.name}</strong> tidak mencukupi!<br><br>\n                              Saldo saat ini: ${n.formatCurrency(o)}<br>\n                              Kebutuhan: ${n.formatCurrency(t.amount)}`,confirmButtonText:"OK"})}const o=n.getData("transactions");if(a.editId){const e=o.findIndex((t=>t.id===a.editId));-1!==e&&(o[e]={...o[e],...t},Swal.fire({icon:"success",title:"Berhasil",text:"Transaksi berhasil diperbarui",timer:2e3,showConfirmButton:!1}))}else t.id="trans-"+Date.now(),o.push(t),Swal.fire({icon:"success",title:"Berhasil",text:"Transaksi berhasil ditambahkan",timer:2e3,showConfirmButton:!1});n.saveData("transactions",o)?(e.transactionForm.reset(),a.editId=null,e.transactionModal&&e.transactionModal.hide(),this.updateDashboard(),this.loadWallets(),e.generateReportBtn&&this.generateReport(),e.transactionsList&&this.loadTransactions()):Swal.fire({icon:"error",title:"Gagal",text:"Gagal menyimpan transaksi",confirmButtonText:"OK"})},deleteTransaction:function(t){n.confirm("Apakah Anda yakin ingin menghapus transaksi ini?",(()=>{const a=n.getData("transactions").filter((e=>e.id!==t));n.saveData("transactions",a)?(this.updateDashboard(),this.loadWallets(),e.generateReportBtn&&this.generateReport(),e.transactionsList&&this.loadTransactions(),n.showNotification("Transaksi berhasil dihapus")):n.showNotification("Gagal menghapus transaksi","danger")}))},handleReportPeriodChange:function(){e.reportPeriod&&e.customDateRange&&("custom"===e.reportPeriod.value?e.customDateRange.style.display="flex":e.customDateRange.style.display="none")},generateReport:function(){if(!e.generateReportBtn)return;const t=n.getData("transactions"),a=n.getData("wallets");let o=[...t];const r=e.reportPeriod.value,i=new Date;if("month"===r){const t=i.getMonth(),e=i.getFullYear();o=o.filter((a=>{const n=new Date(a.date);return n.getMonth()===t&&n.getFullYear()===e}))}else if("last-month"===r){const t=0===i.getMonth()?11:i.getMonth()-1,e=0===i.getMonth()?i.getFullYear()-1:i.getFullYear();o=o.filter((a=>{const n=new Date(a.date);return n.getMonth()===t&&n.getFullYear()===e}))}else if("year"===r){const t=i.getFullYear();o=o.filter((e=>new Date(e.date).getFullYear()===t))}else if("custom"===r){const t=new Date(e.reportStartDate.value),a=new Date(e.reportEndDate.value);o=o.filter((e=>{const n=new Date(e.date);return n>=t&&n<=a}))}let l=0,s=0;if(o.forEach((t=>{"income"===t.type&&(l+=t.amount),"expense"===t.type&&(s+=t.amount)})),"month"===r||"custom"===r){const t="month"===r?new Date(i.getFullYear(),i.getMonth(),1):new Date(e.reportStartDate.value),n="month"===r?new Date(i.getFullYear(),i.getMonth()+1,0):new Date(e.reportEndDate.value);a.forEach((e=>{const a=new Date(e.createdAt);a>=t&&a<=n&&(l+=e.initialBalance||0)}))}const c=l-s;let d=0,m=0;if("month"===r||"last-month"===r){const e=n.getLastMonthData();t.forEach((t=>{const a=new Date(t.date);a.getMonth()===e.month&&a.getFullYear()===e.year&&("income"===t.type&&(d+=t.amount),"expense"===t.type&&(m+=t.amount))})),a.forEach((t=>{const a=new Date(t.createdAt);a.getMonth()===e.month&&a.getFullYear()===e.year&&(d+=t.initialBalance||0)}))}const u=d-m,g=c-u,p=0!==u?Math.round(g/Math.abs(u)*100):0;e.reportIncome&&(e.reportIncome.textContent=n.formatCurrency(l)),e.reportExpense&&(e.reportExpense.textContent=n.formatCurrency(s)),e.reportBalance&&(e.reportBalance.textContent=n.formatCurrency(c)),e.reportChange&&(e.reportChange.textContent=`${g>=0?"+":""}${n.formatCurrency(g)} (${p}%)`,e.reportChange.className=g>=0?"text-success":"text-danger"),this.generateCharts(o,a),this.generateMonthlyComparisonChart(t)},generateCharts:function(e,a){const o={};e.filter((t=>"income"===t.type)).forEach((t=>{const e=t.category||"other-income";o[e]=(o[e]||0)+t.amount}));const r={};e.filter((t=>"expense"===t.type)).forEach((t=>{const e=t.category||"other-expense";r[e]=(r[e]||0)+t.amount}));const i=a.map((e=>({name:e.name,balance:n.calculateWalletBalance(e.id),color:t.walletTypes[e.type]?.color||"#8d99ae"}))).filter((t=>t.balance>0));this.renderChart("income",o),this.renderChart("expense",r),this.renderWalletChart(i)},generateMonthlyComparisonChart:function(t){if(!e.monthlyComparisonChart)return;a.chartInstances.monthlyComparison&&a.chartInstances.monthlyComparison.destroy();const o=new Date,r=o.getFullYear(),i=[],l=[],s=[];for(let e=5;e>=0;e--){const a=new Date(r,o.getMonth()-e,1),c=a.toLocaleDateString("id-ID",{month:"short"});i.push(c);let d=0,m=0;t.forEach((t=>{const e=new Date(t.date);e.getMonth()===a.getMonth()&&e.getFullYear()===a.getFullYear()&&("income"===t.type&&(d+=t.amount),"expense"===t.type&&(m+=t.amount))}));n.getData("wallets").forEach((t=>{const e=new Date(t.createdAt);e.getMonth()===a.getMonth()&&e.getFullYear()===a.getFullYear()&&(d+=t.initialBalance||0)})),l.push(d),s.push(m)}a.chartInstances.monthlyComparison=new Chart(e.monthlyComparisonChart,{type:"bar",data:{labels:i,datasets:[{label:"Pemasukan",data:l,backgroundColor:"#4cc9f0",borderWidth:1},{label:"Pengeluaran",data:s,backgroundColor:"#f72585",borderWidth:1}]},options:{responsive:!0,plugins:{title:{display:!0,text:"Perbandingan Bulanan",font:{size:16}},tooltip:{callbacks:{label:function(t){return n.formatCurrency(t.raw)}}}},scales:{y:{beginAtZero:!0,ticks:{callback:function(t){return n.formatCurrency(t)}}}}}})},renderChart:function(o,r){const i="income"===o?e.incomeChart:e.expenseChart;if(!i)return;a.chartInstances[o]&&a.chartInstances[o].destroy();const l="income"===o?n.getData("incomeCategories")||t.defaultCategories.income:n.getData("expenseCategories")||t.defaultCategories.expense,s=[],c=[],d=[];l.forEach((t=>{r[t.id]&&(s.push(t.name),c.push(r[t.id]),d.push(t.color))}));const m=`other-${o}`;r[m]&&(s.push("Lainnya"),c.push(r[m]),d.push("#8d99ae")),a.chartInstances[o]=new Chart(i,{type:"doughnut",data:{labels:s,datasets:[{data:c,backgroundColor:d,borderWidth:1}]},options:{responsive:!0,plugins:{title:{display:!0,text:"income"===o?"Pemasukan per Kategori":"Pengeluaran per Kategori",font:{size:16}},tooltip:{callbacks:{label:function(t){return n.formatCurrency(t.raw)}}}}}})},renderWalletChart:function(t){if(!e.walletChart)return;a.chartInstances.wallet&&a.chartInstances.wallet.destroy();const o=t.map((t=>t.name)),r=t.map((t=>t.balance)),i=t.map((t=>t.color));a.chartInstances.wallet=new Chart(e.walletChart,{type:"bar",data:{labels:o,datasets:[{label:"Saldo Dompet",data:r,backgroundColor:i,borderWidth:1}]},options:{responsive:!0,plugins:{title:{display:!0,text:"Saldo per Dompet",font:{size:16}},tooltip:{callbacks:{label:function(t){return n.formatCurrency(t.raw)}}}},scales:{y:{beginAtZero:!0,ticks:{callback:function(t){return n.formatCurrency(t)}}}}}})},saveCategory:function(t){const o="income"===t?e.incomeCategoryForm:e.expenseCategoryForm,r="income"===t?e.incomeCategoryName:e.expenseCategoryName,i="income"===t?e.incomeCategoryColor:e.expenseCategoryColor,l=r.value.trim(),s=i.value;if(!l)return void n.showNotification("Nama kategori wajib diisi","error");const c="income"===t?"incomeCategories":"expenseCategories",d=n.getData(c)||[];if(a.editingCategory.type===t&&a.editingCategory.id){const r=d.findIndex((t=>t.id===a.editingCategory.id));if(-1!==r){if(d.some(((t,e)=>e!==r&&t.name.toLowerCase()===l.toLowerCase())))return void n.showNotification("Kategori sudah ada","error");d[r]={...d[r],name:l,color:s},n.saveData(c,d)&&(n.showNotification("Kategori berhasil diperbarui"),o.reset(),a.editingCategory={type:null,id:null},o.querySelector('button[type="submit"]').textContent="Tambah Kategori",this.renderCategoriesList(t),this.loadCategories(t),e.transactionsList&&this.loadTransactions(),e.generateReportBtn&&this.generateReport())}return}if(d.some((t=>t.name.toLowerCase()===l.toLowerCase())))return void n.showNotification("Kategori sudah ada","error");const m={id:l.toLowerCase().replace(/\s+/g,"-"),name:l,color:s};d.push(m),n.saveData(c,d)&&(n.showNotification("Kategori berhasil ditambahkan"),o.reset(),this.renderCategoriesList(t),this.loadCategories(t))},editCategory:function(t,o){const r=(n.getData("income"===t?"incomeCategories":"expenseCategories")||[]).find((t=>t.id===o));if(r){a.editingCategory={type:t,id:o};const n="income"===t?e.incomeCategoryForm:e.expenseCategoryForm,i="income"===t?e.incomeCategoryName:e.expenseCategoryName,l="income"===t?e.incomeCategoryColor:e.expenseCategoryColor;i.value=r.name,l.value=r.color,n.querySelector('button[type="submit"]').textContent="Simpan Perubahan"}},deleteCategory:function(t,a){n.confirm('Hapus kategori ini? Transaksi dengan kategori ini akan diubah menjadi "Lainnya"',(()=>{const o="income"===t?"incomeCategories":"expenseCategories",r=(n.getData(o)||[]).filter((t=>t.id!==a)),i=n.getData("transactions").map((e=>e.type===t&&e.category===a?{...e,category:"income"===t?"other-income":"other-expense"}:e));n.saveData(o,r)&&n.saveData("transactions",i)&&(this.renderCategoriesList(t),this.loadCategories(t),e.transactionsList&&this.loadTransactions(),e.generateReportBtn&&this.generateReport(),n.showNotification("Kategori dihapus"))}))},renderCategoriesList:function(t){const a=n.getData("income"===t?"incomeCategories":"expenseCategories")||[];("income"===t?e.incomeCategoriesList:e.expenseCategoriesList).innerHTML=a.map((e=>`\n                <div class="category-item d-flex justify-content-between align-items-center mb-2 p-2 border rounded">\n                    <div class="d-flex align-items-center">\n                        <span class="color-badge me-2" style="background: ${e.color}; width: 20px; height: 20px; border-radius: 50%;"></span>\n                        <span>${e.name}</span>\n                    </div>\n                    <div>\n                        <button class="btn btn-sm btn-warning me-2" \n                            data-action="edit-category" \n                            data-type="${t}" \n                            data-id="${e.id}">\n                            <i class="fas fa-edit"></i>\n                        </button>\n                        <button class="btn btn-sm btn-danger" \n                            data-action="delete-category" \n                            data-type="${t}" \n                            data-id="${e.id}">\n                            <i class="fas fa-trash"></i>\n                        </button>\n                    </div>\n                </div>\n            `)).join("")}};o.init(),window.app=o}));